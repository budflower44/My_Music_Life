package com.mml.www.handler;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.mml.www.service.SpotifyAPIService;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
public class TracksJSONHandler {
	
	@Autowired
	private SpotifyAPIService ssv; 
	
	@Autowired
	private AlbumsJSONHandler albumsJSONHandler;
	
	@Autowired
	private ArtistsJSONHandler artistsJSONHandler;
	
	public ResponseEntity<MultiValueMap<String, String>> tracksJSONHandler(String TracksData){
		
		//결과값 반환할 map 생성
		MultiValueMap<String, String> tracksMap = new LinkedMultiValueMap<String, String>();

		// Jackson ObjectMapper 생성
		ObjectMapper objectMapper = new ObjectMapper();
		
		try {
			//JSON 문자열을 Java 객체로 파싱
			Map<String, Object> TracksDataJSONMap = objectMapper.readValue(TracksData, new TypeReference<Map<String, Object>> () {});
			
			List<Map<String, Object>> traVOList = (List<Map<String, Object>>) TracksDataJSONMap.get("items");
			
			for(Map<String, Object> trVOMap : traVOList) {
				//각 객체별로 필요한 값 가져오기
				log.info("@@@@@@@@@@@@@@@@@@@@@@@@ tracks album >>"+trVOMap.get("album").toString());
				log.info("@@@@@@@@@@@@@@@@@@@@@@@@ tracks artists >>"+trVOMap.get("artists").toString());
				
				//배열안의 오브젝트
				trVOMap.get("album");
				
				
				
				
				
				trVOMap.get("artists").toString();
				
				
				
				
			
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		return ResponseEntity.ok(tracksMap);
	}
	
	
	
}
