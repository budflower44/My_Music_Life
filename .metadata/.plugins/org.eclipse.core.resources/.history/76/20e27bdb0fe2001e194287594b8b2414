<2024-02-07>
--db 생성 "mml"
create database mml;
--계정 생성
create user 'mmlUser'@'localhost' identified by 'mymusiclife';
--mml db 모든 권한 부여
grant all privileges on mml.* to 'mmlUser'@'localhost' with grant option; 
--권한 설정 완료
flush privileges;

<2024-02-13>
--"albums", "artists", "tracks" 테이블 생성 완료
CREATE TABLE `albums` (
	`id`	varchar(255) NOT NULL,
	`external_urls`	varchar(1000) NOT NULL,
	`album_type`	varchar(100),
	`artists_external_urls`	varchar(1000),
	`artists_href`	varchar(1000),
	`artists_id`	varchar(1000),
	`artists_name`	varchar(1000),
	`artists_type`	varchar(100),
	`artists_uri`	varchar(1000),
	`href`	varchar(1000),
	`images_url`	varchar(1000),
	`images_height` int DEFAULT 640,
	`images_width` int DEFAULT 640,
	`name`	varchar(1000),
	`release_date`	varchar(1000),
	`release_date_precision`	varchar(100),
	`total_tracks` int DEFAULT 0,
	`type`	varchar(100),
	`uri`	varchar(1000),
	`likes`	bigint DEFAULT 0,
	`play_count`	bigint DEFAULT 0,
	`rank_month` int DEFAULT 0,
	`rank_week` int DEFAULT 0,
	`rank_day` int DEFAULT 0,
	primary key(id));

CREATE TABLE `artists` (
    `id` varchar(255),
    `external_urls` varchar(1000) NOT NULL,
    `followers_href` varchar(1000),
    `followers_total` bigint DEFAULT 0,
    `genres` varchar(1000),
    `href` varchar(1000),
    `images_url` varchar(1000),
    `images_height` int DEFAULT 640,
    `images_width` int DEFAULT 640,
    `name` varchar(1000),
    `popularity` bigint DEFAULT 0,
    `type` varchar(100),
    `uri` varchar(1000),
    `likes` bigint DEFAULT 0,
    `play_count` bigint DEFAULT 0,
    `rank_month` int DEFAULT 0,
    `rank_week` int DEFAULT 0,
    `rank_day` int DEFAULT 0,
    PRIMARY KEY (id));

CREATE TABLE `tracks` (
    `id` varchar(255) NOT NULL,
    `album_id` varchar(1000) NOT NULL,
    `artists_id` varchar(1000) NOT NULL,
    `external_url` varchar(1000) NOT NULL,
    `disc_number` bigint DEFAULT 0,
    `duration_ms` bigint DEFAULT 0,
    `explicit` boolean,
    `external_ids` varchar(1000),
    `href` varchar(1000),
    `is_local` boolean,
    `name` varchar(1000),
    `popularity` bigint DEFAULT 0,
    `preview_url` varchar(1000),
    `track_number` int DEFAULT 0,
    `type` varchar(100),
    `uri` varchar(1000),
    `likes` bigint DEFAULT 0,
    `play_count` bigint DEFAULT 0,
    `rank_month` int DEFAULT 0,
    `rank_week` int DEFAULT 0,
    `rank_day` int DEFAULT 0,
    PRIMARY KEY (id));

<2024-02-20>
--Tracks 테이블 지우고 다시 만들기
drop table tracks;

CREATE TABLE `tracks` (
    `id` varchar(255) NOT NULL,
    `album_id` varchar(255) NOT NULL,
    `artists_id` varchar(255) NOT NULL,
    `album_artists_external_urls` TEXT,
    `album_artists_href` TEXT,
    `album_artists_id` varchar(255) NOT NULL,
    `album_artists_name` varchar(255),
    `album_artists_type` varchar(100),
    `album_artists_uri` TEXT,
    `album_external_urls` TEXT,
    `album_href` TEXT,
    `album_images_url` TEXT,
    `album_images_width` int DEFAULT 0,
    `album_images_height` int DEFAULT 0,
    `album_name` varchar(255),
    `albums_release_date` varchar(255),
    `albums_release_date_precision` varchar(255),
    `album_total_tracks` int DEFAULT 0,
    `album_type` varchar(100),
    `album_uri` TEXT,
    `artists_external_urls` TEXT,
    `artists_href` TEXT,
    `artists_name` varchar(255),
    `artists_type` varchar(100),
    `artists_uri` varchar(1000),
    `external_url` TEXT,
    `disc_number` bigint DEFAULT 0,
    `duration_ms` bigint DEFAULT 0,
    `explicit` boolean DEFAULT false,
    `external_id` varchar(255),
    `href` TEXT,
    `is_local` boolean DEFAULT false,
    `name` varchar(255),
    `popularity` bigint DEFAULT 0,
    `preview_url` TEXT,
    `track_number` int DEFAULT 0,
    `type` varchar(100),
    `uri` TEXT,
    `likes` bigint DEFAULT 0,
    `play_count` bigint DEFAULT 0,
    `rank_month` int DEFAULT 0,
    `rank_week` int DEFAULT 0,
    `rank_day` int DEFAULT 0,
    PRIMARY KEY (id)
);
-- 용량이 커져서 varchar(1000) -> TEXT로 형 변환해서 넣

-- 칼럼명 변경 (오타)
ALTER TABLE tracks CHANGE albums_release_date album_release_date varchar(255);
ALTER TABLE tracks CHANGE albums_release_date_precision album_release_date_precision varchar(255);
ALTER TABLE tracks CHANGE external_id external_ids varchar(255);

<2024-03-07>
-- comment 테이블 생성
create table comment(
cno bigint auto_increment,
id varchar(255) not null,
writer varchar(255) not null, 
content text not null, 
reg_at datetime default now(),
mod_at datetime default now(),
primary key(cno));

<2024-03-08>
-- member 테이블 생성
create table member(
nick_name varchar(255) not null,
id varchar(255) not null,
pwd varchar(255) not null, 
reg_at datetime default now(),
mod_at datetime default now(),
primary key(nick_name));

-- auth_member 테이블 생성
create table auth_member(
nick_name varchar(255) not null,
auth varchar(100) not null
);

-- auth_member에 member nick_name 외래키 추가
alter table auth_member add constraint fk_auth foreign key(nick_name) references member(nick_name);

<2024-03-14>
-- member, auth_member 테이블 drop 후 재생성
drop table auth_member;
drop table member;

-- member 테이블 재생성
create table member(
id varchar(255) not null,
pwd varchar(255) not null, 
nick_name varchar(255) not null,
reg_at datetime default now(),
mod_at datetime default now(),
primary key(id));

-- auth_member 테이블 재생성
create table auth_member(
id varchar(255) not null,
auth varchar(100) not null
);